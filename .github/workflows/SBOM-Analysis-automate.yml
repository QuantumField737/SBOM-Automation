name: Upload SBOM to Dependency-Track & Generate SARIF Report

on:
  push:
    branches:
      - main

jobs:
  upload-sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for SBOM file
        id: check-sbom
        run: |
          if [ -d "security-audit" ] && [ -n "$(ls -A security-audit/*.json 2>/dev/null)" ]; then
            SBOM_FILE=$(ls -A security-audit/*.json | head -n 1)
            echo "SBOM_FILE=$SBOM_FILE" >> $GITHUB_ENV
          else
            echo "No SBOM file found. Exiting."
            exit 0
          fi

      - name: Upload SBOM to Dependency-Track
        run: |
          PROJECT_NAME=$(basename $SBOM_FILE .json)

          # Create project in Dependency-Track
          PROJECT_UUID=$(curl -s -X POST "$DEP_TRACK_URL/api/v1/project" \
            -H "Content-Type: application/json" \
            -H "X-Api-Key: $DEP_TRACK_API_KEY" \
            -d '{"name": "'"$PROJECT_NAME"'", "active": true}' | jq -r '.uuid')

          # Upload SBOM
          curl -s -X PUT "$DEP_TRACK_URL/api/v1/bom" \
            -H "Content-Type: application/json" \
            -H "X-Api-Key: $DEP_TRACK_API_KEY" \
            -d '{"project": "'"$PROJECT_UUID"'", "bom": "'"$(base64 -w 0 $SBOM_FILE)"'"}'

          echo "PROJECT_UUID=$PROJECT_UUID" >> $GITHUB_ENV
        env:
          DEP_TRACK_URL: ${{ secrets.DEP_TRACK_URL }}
          DEP_TRACK_API_KEY: ${{ secrets.DEP_TRACK_API_KEY }}

      - name: Wait for Dependency-Track Processing
        run: sleep 180  # Wait 3 minutes

      - name: Fetch Security Report & Save SARIF
        run: |
          REPORT=$(curl -s "$DEP_TRACK_URL/api/v1/metrics/project/$PROJECT_UUID/current" \
            -H "X-Api-Key: $DEP_TRACK_API_KEY")

          HIGH=$(echo $REPORT | jq '.vulnerabilities.high')
          CRITICAL=$(echo $REPORT | jq '.vulnerabilities.critical')
          RISK_SCORE=$(echo $REPORT | jq '.riskScore')

          SARIF_FILE="security-audit/deptrack-results.sarif"

          cat <<EOF > $SARIF_FILE
          {
            "version": "2.1.0",
            "runs": [{
              "tool": {
                "driver": {
                  "name": "Dependency-Track",
                  "rules": [{
                    "id
